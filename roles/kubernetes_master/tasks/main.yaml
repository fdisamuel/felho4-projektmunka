---
- name: Ensure old versions of join-command, token and config files are not present.
  become: false
  local_action: file path={{ item }} state=absent
  with_items:
    - ./join-command
    - ./token
    - ./config

- name: Install openshift
  pip:
    name: openshift==0.13.1


- name: Initialize the Kubernetes cluster using k3s
  shell: curl -sfL https://get.k3s.io | sh -s - server --tls-san {{ publicIp }} --node-external-ip {{ publicIp }}
  environment:
    K3S_KUBECONFIG_MODE: "644"
    INSTALL_K3S_VERSION: "{{ kubeVersion }}"

- name: Wait for K3s to be ready
  shell: |
    until k3s kubectl get nodes; do sleep 5; done

- name: Create .kube directory
  file:
    path: /home/ubuntu/.kube
    state: directory
    mode: 0755

- name: Setup kubeconfig for ubuntu user
  ansible.builtin.copy:
    remote_src: yes
    src: /etc/rancher/k3s/k3s.yaml
    dest: /home/ubuntu/.kube/config
    owner: ubuntu
    group: ubuntu
    mode: 0600

# - name: Remove the taints on the master
#   become: false
#   command: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
#   when: untaintMaster is defined and untaintMaster|bool

- name: Download Kubernetes Dashboard.
  ansible.builtin.get_url:
    force: yes
    url: https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml
    dest: /tmp/dashboard.yaml
    mode: '0664'

- name: Setup cluster admin role in Kubernetes Dashboard
  ansible.builtin.replace:
    path: /tmp/dashboard.yaml
    regexp: '  kind: ClusterRole\n  name: kubernetes-dashboard'
    replace: '  kind: ClusterRole\n  name: cluster-admin'

- name: Apply Kubernetes Dashboard
  become: false
  kubernetes.core.k8s:
    state: present
    src: /tmp/dashboard.yaml

- name: Set Kubernetes Dashboard container args
  become: false
  kubernetes.core.k8s:
    state: patched
    kind: Deployment
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    definition:
      spec:
        template:
          spec:
            containers:
              - name: kubernetes-dashboard
                args:
                  - --enable-insecure-login
                  #- --enable-skip-login
                  - --disable-settings-authorizer
                  - --insecure-bind-address=0.0.0.0
                  - --namespace=kubernetes-dashboard
                livenessProbe:
                  httpGet:
                    port: 9090
                    scheme: HTTP

- name: Set Kubernetes Dashboard service to NodePort type, with target ports
  become: false
  kubernetes.core.k8s:
    state: patched
    kind: Service
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    definition:
      spec:
        type: NodePort
        ports:
          - port: 443
            targetPort: 9090
            nodePort: 30000

- name: Create service account for dashboard access
  become: false
  kubernetes.core.k8s:
    state: present
    kind: ServiceAccount
    name: cluster-admin-dashboard-sa
    namespace: kube-system

- name: Grant admin priviledges to dashboard service account
  become: false
  kubernetes.core.k8s:
    state: present
    api_version: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    name: cluster-admin-dashboard-sa
    namespace: kube-system
    definition:
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: cluster-admin-dashboard-sa
        namespace: kube-system

- name: Generate token for dashboard service account
  become: false
  command: kubectl --namespace=kube-system create token cluster-admin-dashboard-sa
  register: dashboard_token

- name: Print dashboard service account token into local file
  become: false
  local_action: copy content="{{ dashboard_token.stdout }}" dest="./token"

- name: Download helm installer script.
  become: false
  ansible.builtin.get_url:
    force: yes
    url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    dest: /home/ubuntu/helm.sh
    mode: '0700'

- name: Execute helm installer script.
  become: false
  command: ./helm.sh

- name: Add kube-prometheus-stack helm repo
  become: false
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: "https://prometheus-community.github.io/helm-charts"
  register: add_kube_prometheus_stack_helm_repo
  when: installPrometheus|bool

- name: Install kube-prometheus-stack Chart
  become: false
  kubernetes.core.helm:
    name: kube-prometheus-stack
    namespace: default
    chart_ref: prometheus-community/kube-prometheus-stack
  when: add_kube_prometheus_stack_helm_repo.changed and installPrometheus|bool

- name: Generate k3s join command
  become: true
  shell: echo "curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ kubeVersion }} K3S_URL=https://{{ nodeIp }}:6443 K3S_TOKEN=$(cat /var/lib/rancher/k3s/server/node-token) sh -"
  register: join_command

- name: Copy join command to local file
  become: false
  local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- name: Fetch kube config file into local kubernetes folder
  become: false
  ansible.builtin.fetch:
    flat: yes
    src: ~/.kube/config
    dest: ./config

- name: Update server URL in kube config
  become: false
  local_action:
    module: replace
    path: ./config
    regexp: 'server: https://127.0.0.1:6443'
    replace: 'server: https://{{ publicIp }}:6443'

- name: Create local .ssh directory
  become: false
  local_action:
    module: file
    path: ~/.ssh
    state: directory
    mode: '0700'

- name: Debug variables
  become: false
  local_action: debug var={{ item }}
  loop:
    - kubernetes_master_node
    - kubernetes_worker_node
    - workerIps

- name: Generate SSH config file
  become: false
  local_action:
    module: template
    src: ssh_config.j2
    dest: ~/.ssh/config
    mode: '0600'